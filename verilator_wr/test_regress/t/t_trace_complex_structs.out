$version Generated by VerilatedVcd $end
$date Sun Oct  7 21:58:08 2018
 $end
$timescale   1ns $end

 $scope module top $end
  $var wire  1 F clk $end
  $scope module $unit $end
   $var wire  1 # global_bit $end
  $upscope $end
  $scope module t $end
   $var wire  1 F clk $end
   $var wire 32 $ cyc [31:0] $end
   $var real 64 > v_arr_real(0) $end
   $var real 64 @ v_arr_real(1) $end
   $var wire  2 / v_arrp [2:1] $end
   $var wire  2 0 v_arrp_arrp(3) [1:0] $end
   $var wire  2 1 v_arrp_arrp(4) [1:0] $end
   $var wire  1 G v_arru(1) $end
   $var wire  1 H v_arru(2) $end
   $var wire  2 6 v_arru_arrp(3) [2:1] $end
   $var wire  2 7 v_arru_arrp(4) [2:1] $end
   $var wire  1 I v_arru_arru(3)(1) $end
   $var wire  1 J v_arru_arru(3)(2) $end
   $var wire  1 K v_arru_arru(4)(1) $end
   $var wire  1 L v_arru_arru(4)(2) $end
   $var wire 32 B v_enumed [31:0] $end
   $var wire 32 C v_enumed2 [31:0] $end
   $var real 64 < v_real $end
   $scope module unnamedblk1 $end
    $var wire 32 D b [31:0] $end
    $scope module unnamedblk2 $end
     $var wire 32 E a [31:0] $end
    $upscope $end
   $upscope $end
   $scope module v_arrp_strp(3) $end
    $var wire  1 3 b0 $end
    $var wire  1 2 b1 $end
   $upscope $end
   $scope module v_arrp_strp(4) $end
    $var wire  1 5 b0 $end
    $var wire  1 4 b1 $end
   $upscope $end
   $scope module v_arru_strp(3) $end
    $var wire  1 9 b0 $end
    $var wire  1 8 b1 $end
   $upscope $end
   $scope module v_arru_strp(4) $end
    $var wire  1 ; b0 $end
    $var wire  1 : b1 $end
   $upscope $end
   $scope module v_str32x2(0) $end
    $var wire 32 % data [31:0] $end
   $upscope $end
   $scope module v_str32x2(1) $end
    $var wire 32 & data [31:0] $end
   $upscope $end
   $scope module v_strp $end
    $var wire  1 ( b0 $end
    $var wire  1 ' b1 $end
   $upscope $end
   $scope module v_strp_strp $end
    $scope module x0 $end
     $var wire  1 , b0 $end
     $var wire  1 + b1 $end
    $upscope $end
    $scope module x1 $end
     $var wire  1 * b0 $end
     $var wire  1 ) b1 $end
    $upscope $end
   $upscope $end
   $scope module v_unip_strp $end
    $scope module x0 $end
     $var wire  1 . b0 $end
     $var wire  1 - b1 $end
    $upscope $end
    $scope module x1 $end
     $var wire  1 . b0 $end
     $var wire  1 - b1 $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
1#
b00000000000000000000000000000000 $
b00000000000000000000000011111111 %
b00000000000000000000000000000000 &
0'
0(
0)
0*
0+
0,
0-
0.
b00 /
b00 0
b00 1
02
03
04
05
b00 6
b00 7
08
09
0:
0;
r0 <
r0 >
r0 @
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
0F
0G
0H
0I
0J
0K
0L
#10
b00000000000000000000000000000001 $
b00000000000000000000000011111110 %
b00000000000000000000000000000001 &
1'
1(
1)
1*
1+
1,
1-
1.
b11 /
b11 0
b11 1
12
13
14
15
b11 6
b11 7
18
19
1:
1;
r0.1 <
r0.2 >
r0.3 @
b00000000000000000000000000000001 B
b00000000000000000000000000000010 C
b00000000000000000000000000000101 D
b00000000000000000000000000000101 E
1F
#15
0F
#20
b00000000000000000000000000000010 $
b00000000000000000000000011111101 %
b00000000000000000000000000000010 &
0'
0(
0)
0*
0+
0,
0-
0.
b00 /
b00 0
b00 1
02
03
04
05
b00 6
b00 7
08
09
0:
0;
r0.2 <
r0.4 >
r0.6 @
b00000000000000000000000000000010 B
b00000000000000000000000000000100 C
1F
#25
0F
#30
b00000000000000000000000000000011 $
b00000000000000000000000011111100 %
b00000000000000000000000000000011 &
1'
1(
1)
1*
1+
1,
1-
1.
b11 /
b11 0
b11 1
12
13
14
15
b11 6
b11 7
18
19
1:
1;
r0.3 <
r0.6000000000000001 >
r0.8999999999999999 @
b00000000000000000000000000000011 B
b00000000000000000000000000000110 C
1F
#35
0F
#40
b00000000000000000000000000000100 $
b00000000000000000000000011111011 %
b00000000000000000000000000000100 &
0'
0(
0)
0*
0+
0,
0-
0.
b00 /
b00 0
b00 1
02
03
04
05
b00 6
b00 7
08
09
0:
0;
r0.4 <
r0.8 >
r1.2 @
b00000000000000000000000000000100 B
b00000000000000000000000000001000 C
1F
#45
0F
#50
b00000000000000000000000000000101 $
b00000000000000000000000011111010 %
b00000000000000000000000000000101 &
1'
1(
1)
1*
1+
1,
1-
1.
b11 /
b11 0
b11 1
12
13
14
15
b11 6
b11 7
18
19
1:
1;
r0.5 <
r1 >
r1.5 @
b00000000000000000000000000000101 B
b00000000000000000000000000001010 C
1F
#55
0F
#60
b00000000000000000000000000000110 $
b00000000000000000000000011111001 %
b00000000000000000000000000000110 &
0'
0(
0)
0*
0+
0,
0-
0.
b00 /
b00 0
b00 1
02
03
04
05
b00 6
b00 7
08
09
0:
0;
r0.6 <
r1.2 >
r1.8 @
b00000000000000000000000000000110 B
b00000000000000000000000000001100 C
1F
